<project xmlns:ivy="antlib:org.apache.ivy.ant" name="vihuela" default="compile" basedir=".">
  
  <property  file="build.properties"/>
  <property  file="${user.home}/build.properties"/>

  
  <property  name="app.name"    value="vihuela"/>
  <property  name="app.path"    value="/${app.name}"/>
  <property  name="build.home"  value="${basedir}/build"/>
  <property  name="dist.home"   value="${basedir}/dist"/>
  <property  name="docs.home"   value="${basedir}/docs"/>
  <property  name="src.home"    value="${basedir}/src"/>
  <property  name="web.home"    value="${basedir}/web"/>
  <property  name="lib.home"    value="${basedir}/lib"/>
  
  
  <path id="compile.classpath">
    <fileset dir="${basedir}/lib">
      <include name="*.jar"/>
    </fileset>
  </path>

  
  <property  name="compile.debug"        value="true"/>
  <property  name="compile.deprecation"  value="false"/>
  <property  name="compile.optimize"     value="true"/>

  
  <target name="all" depends="clean,compile" 
    description="Clean build and dist directories, then compile"/>

  
  <target name="clean" 
    description="Delete old build and dist directories">
    
    <delete dir="${build.home}"/>
    <delete dir="${dist.home}"/>
  </target>

  
  <target name="compile" depends="prepare,resolve" 
    description="Compile Java sources">
    
    <!-- Compile Java classes as necessary -->
    <mkdir dir="${build.home}/WEB-INF/classes"/>

    <javac 
      srcdir       ="${src.home}"         
      destdir      ="${build.home}/WEB-INF/classes"
      debug        ="${compile.debug}"
      deprecation  ="${compile.deprecation}"
      optimize     ="${compile.optimize}">
          
      <classpath refid="compile.classpath"/>
    </javac>
  
    <!-- Copy application resources -->
    <copy  todir="${build.home}/WEB-INF/classes">
      <fileset dir="${src.home}" excludes="**/*.java"/>
    </copy>
  </target>

  
  <target name="dist" depends="compile" 
    description="Create binary distribution">

    <!-- Copy documentation subdirectories -->
    <mkdir dir="${dist.home}/docs"/>
    <copy todir="${dist.home}/docs">
      <fileset dir="${docs.home}"/>
    </copy>
  
    <!-- Create application JAR file -->
    <jar 
      jarfile  ="${dist.home}/${app.name}.war" 
      basedir  ="${build.home}"/>

  </target>

  
  <target name="prepare">
    
    <!-- Create build directories as needed -->
    <mkdir dir="${build.home}"/>
    <mkdir dir="${build.home}/WEB-INF"/>
    <mkdir dir="${build.home}/WEB-INF/classes"/>
  
    <!-- Copy static content of this web application -->
    <copy todir="${build.home}">
      <fileset dir="${web.home}"/>
    </copy>
  
    <!-- Copy external dependencies as required -->
    <mkdir dir="${build.home}/WEB-INF/lib"/>
    <copy todir="${build.home}/WEB-INF/lib">
      <fileset dir="${lib.home}">
        <include name="*.jar"/>
        <exclude name="javax.servlet-api*.jar"/>
      </fileset>
    </copy>

  </target>

  
<!-- ========== Ivy Targets =============================================== -->
  
  <target name="resolve" 
    description="Retrieve dependencies with ivy">
    
    <ivy:resolve/>
    <ivy:retrieve pattern="${lib.home}/[artifact]-[revision].[ext]" type="jar,bundle"/>
  </target>
  
  <target name="report" depends="resolve" 
    description="Generate a report of dependencies">
    
    <ivy:report todir="${build.dir}"/>
  </target>

  <target name="clean-cache" 
    description="Clean the ivy cache">
    
    <ivy:cleancache/>
  </target>
  
  
<!-- ========== Install Ivy =============================================== -->

  <property   name="ivy.install.version"  value="2.3.0" />
  
  <condition property="ivy.home" value="${env.IVY_HOME}">
    <isset property="env.IVY_HOME" />
  </condition>
  
  <property   name="ivy.home"      value="${user.home}/.ant" />
  <property   name="ivy.jar.dir"   value="${ivy.home}/lib" />
  <property   name="ivy.jar.file"  value="${ivy.jar.dir}/ivy-${ivy.install.version}.jar" />

  
  <target name="download-ivy" unless="offline">
    <mkdir dir="${ivy.jar.dir}"/>
    <get 
        src           ="http://repo2.maven.org/maven2/org/apache/ivy/ivy/${ivy.install.version}/ivy-${ivy.install.version}.jar" 
        dest          ="${ivy.jar.file}" 
        usetimestamp  ="true"/>
  </target>

  
  <target name="init-ivy" depends="download-ivy">
    <path id="ivy.lib.path">
      <fileset dir="${ivy.jar.dir}" includes="*.jar"/>
    </path>
    <taskdef 
        resource      ="org/apache/ivy/ant/antlib.xml"
        uri           ="antlib:org.apache.ivy.ant" 
        classpathref  ="ivy.lib.path"/>
  </target>
  
  
</project>